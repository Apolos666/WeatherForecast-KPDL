name: dockercompose7768302907067737365
services:
  db:
    container_name: weatherforecastdb
    environment:
      MYSQL_DATABASE: weatherdb
      MYSQL_PASSWORD: weatherpass
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_USER: weatheruser
    healthcheck:
      test:
        - CMD
        - mysqladmin
        - ping
        - -h
        - localhost
      timeout: 5s
      interval: 10s
      retries: 3
    image: mysql:8.0
    networks:
      weathernet: null
    ports:
      - mode: ingress
        target: 3306
        published: "3307"
        protocol: tcp
    restart: always
    volumes:
      - type: volume
        source: mysql_data
        target: /var/lib/mysql
        volume: {}
  redis:
    command:
      - redis-server
      - --appendonly
      - "yes"
    container_name: weatherforecast.redis
    healthcheck:
      test:
        - CMD
        - redis-cli
        - ping
      timeout: 3s
      interval: 5s
      retries: 3
    image: redis:alpine
    networks:
      weathernet: null
    ports:
      - mode: ingress
        target: 6379
        published: "6379"
        protocol: tcp
    restart: always
    volumes:
      - type: volume
        source: redis_data
        target: /data
        volume: {}
networks:
  weathernet:
    name: dockercompose7768302907067737365_weathernet
    driver: bridge
volumes:
  mysql_data:
    name: dockercompose7768302907067737365_mysql_data
  redis_data:
    name: dockercompose7768302907067737365_redis_data